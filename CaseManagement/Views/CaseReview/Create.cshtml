@model CaseManagement.ViewModels.CaseReviewPanelViewModel

@{
    ViewBag.Title = "Case Review";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Case Review Panel</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <table class="table">
            <tr>
                <th>
                    @Html.Label("Case Title")
                </th>
                <th>
                    @Html.Label("Panel Members")
                </th>
            </tr>

            @foreach (var item in Model.CasePanelMembers)
            {
                <tr>
                    <td>
                        @Html.CheckBoxFor(modelItem => item.CaseSelected, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(modelItem => item.CaseId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.DisplayFor(modelItem => item.CaseTitle, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        <ul>
                            @foreach (var member in item.AllPanelMembers)
                            {
                                <li>@Html.EditorFor(modelItem => member.MemberSelected) &nbsp; @Html.HiddenFor(modelItem => member.PanelMemberId, new { htmlAttributes = new { @class = "form-control" } }) &nbsp; @Html.DisplayFor(memberItem => member.PanelMemberName, new { htmlAttributes = new { @class = "form-control" } })</li>
                            }
                        </ul>
                    </td>
                </tr>
            }
        </table>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.ReviewDetails, htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewDetails, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReviewDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
                <input type="button" value="Exit" class="btn btn-default" onclick="location.href='@Url.Action("Index","CaseReview")'" />
            </div>
        </div>
    </div>
}
